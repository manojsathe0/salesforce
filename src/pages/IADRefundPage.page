<apex:page controller="IADRefundController" standardstylesheets="false" doctype="html-5.0" id="page" >
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

    <head>
        <apex:stylesheet value="{!URLFOR($Resource.SLDS0122, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
        <apex:includeScript value="{!URLFOR($Resource.IADJS)}"/>

        <apex:includescript value="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js" />
        <apex:includescript value="/support/console/34.0/integration.js" />
        <script type="text/javascript">
            var currentTabId = '';
             function closeAndFocusOtherTab() {
                setTimeout(function() {
                    console.log('amoutn due ' + $('#amountDueHidden').val());
                    if ($('#amountDueHidden').val() == '0.00' || '{!invokingPage}'=='Installment' || '{!isRefundStoreCreditToCard}'=='true') {
                        $('#process').attr('disabled', 'disabled');
                        setTimeout(function() {
                            if('{!invokingPage}'=='Order'){
                                sforce.console.fireEvent('FocusOrderTabEvent', '{!invokingPageId}', null);
                            }
                            else if('{!invokingPage}'=='Installment'){
                                sforce.console.fireEvent('FocusInstallmentTabEvent', '{!invokingPageId}', null);
                            }
                            if( $('#refundToStoreCredit').val() == 'true'){
                                sforce.console.fireEvent('RefreshStoreCreditsPanel', null);
                                if('{!isRefundStoreCreditToCard}'=='true'){
                                    sforce.console.fireEvent('RefreshStoreCreditEvent', '{!invokingPageId}', null);
                                }
                            }
                            sforce.console.fireEvent('RefreshPayments', null);
                            closeCurrentTab();
                        }, 5000);
                    }
                    else{
                         $('#process').removeAttr('disabled');
                    }

                }, 1000);


            }
            function refreshBalance() {

                if ($('#Status').val() == 'Approved') {
                    $.when(populateOrderBalanceWithoutProfile()).then(closeAndFocusOtherTab());
                }

            }

            var closeSubtab = function closeSubtab(result) {
                var tabId = result.id;
                sforce.console.closeTab(tabId);
            };
            function closeCurrentTab() {
                sforce.console.getEnclosingTabId(closeSubtab);
            }


            function openAddNewPayment() {
                sforce.console.getFocusedSubtabId(showTabId);
                sforce.console.getEnclosingPrimaryTabId(enclosingPrimaryTab);
            }
            var showTabId = function showTabId(result) {
                currentTabId = result.id;
            };
            var enclosingPrimaryTab = function enclosingPrimaryTab(result) {
                var url = '/apex/IADAddNewPayment?tabId=' + currentTabId;
                sforce.console.openSubtab(result.id, url, true, 'Add New Payment');
            };

            var listener = function(result) {
                if (result.message == currentTabId) {
                    location.reload(true);
                }
            };
            sforce.console.addEventListener('RefreshTab', listener);
            window.onload = function() {
                populateOrderBalances();
            };


            function isNumeric(num) {
                return !isNaN(num)
            }
            function postRefund(){
                 var theTotal = $('#total').html();
                console.log('total amount ' + theTotal);
                var instCB = document.getElementById('instCB').checked;
                console.log('thetotal ' + theTotal);

                if($('#amountDueHidden').val() == theTotal){
                     $('#process').attr('disabled', 'disabled');
                }

                goTorefund(theTotal);
            }

            var getUrlParameter = function getUrlParameter(sParam) {
                var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : sParameterName[1];
                    }
                }
            };
            function populatePreSelectedProfileLabel(profileId){
                populateOrderBalances();
            }
            function getSelectOptionsSer(){
                var val = $('#options').val();
                console.log('val is ' + val);
                addRow(val);
            }
            function uncheckOthers(){
                $('input:checkbox.otherCB').each(function() {
                    this.checked = false;
                });
            }
            function uncheckTop(){
                $('input:checkbox.topCB').each(function() {
                    this.checked = false;
                });
            }
            <!-- Changes added by Artyom M. per B-15672 -->
            function checkOthers(){
                $('input:checkbox.otherCB').each(function() {
                    this.checked = true;
                });
            }
            function checkTop(){
                $('input:checkbox.topCB').each(function() {
                    this.checked = true;
                });
            }

            function changeTotal() {
                var inst = document.getElementById("installment").value;
                var instCB = document.getElementById('instCB').checked;

                var total = 0.00;
                var zero = 0.00;
                if (getUrlParameter('refund') == '1') {
                    var total = parseFloat(getUrlParameter('amount'));
                }
                else if (instCB && inst != '' && isNumeric(inst)) {
                    total = parseFloat(inst);
                }
                else {
                    total = 0.00;
                    $('input:checkbox.otherCB').each(function() {
                        if (this.checked) {
                            var index = $(this).attr('id');
                            index = index.replace('cb', '');
                            total+=parseFloat($('#in'+index).val());
                        }
                    });
                }
                if(isNumeric(total)){
                    document.getElementById("total").innerHTML = total.toFixed(2);
                }
                else{
                     document.getElementById("total").innerHTML = zero.toFixed(2);
                }
            }

            function changeDefaultRefundMethod(selectedProfile){
                console.log('selectedProfile ' + selectedProfile);
                setSelectedPaymentManual(selectedProfile);
            }
            function onCompleteChangeDefault(){
                console.log('profile set to ' + $('#profileIdHidden').val());

                $( 'select[name*="profileOptions"]' ).val( $('#profileIdHidden').val());
            }
        </script>
        <style>
            .slds .slds-form-element__static {
            line-height: 40px;
            }
            .slds .slds-form--compound .slds-form-element__row {
            margin-bottom: 0px;
            }
        </style>

    </head>

    <body id="body">
    <div id="mainForm" class="slds">

        <apex:messages id="messages" />

        <div class="slds-m-left--medium">

            <div class="slds-text-heading--small">Refund</div>
            <br/>
            <apex:form id="theForm">
                <apex:outputPanel id="hiddenInputs">
                    <input id="refundToStoreCredit" type="hidden" value="{!isRefundToStoreCredit}" />
                    <input id="Status" type="hidden" value="{!responseStatus}" />
                    <input id="amountDueHidden" type="hidden" value="{!amountDue}" />
                    <input id="profileIdHidden" type="hidden" value="{!profileId}" />
                </apex:outputPanel>

                <apex:actionfunction name="populateOrderBalances" action="{!startRequestsInParallel}" rerender="theForm" status="statusUpdating" oncomplete="populateProfiles(); darkenJS();return false;" />

                <apex:actionfunction name="populateOrderBalanceWithoutProfile" action="{!startRequestsInParallel}" rerender="theForm" status="statusUpdating" onComplete="darkenJS(); return false;"  />

                <apex:actionFunction name="addRow" action="{!addOtherAmt}" status="statusUpdating" rerender="theForm" immediate="true" onComplete="darkenJS(); return false;"  />


                <apex:actionfunction name="goTorefund" action="{!processRefund}" rerender="hiddenInputs, theForm" status="statusUpdating" oncomplete=" refreshBalance(); darkenJS();  return false;">
                    <apex:param name="totalAmount" value="" />
                </apex:actionFunction>
                <apex:actionFunction name="setProfileId" action="{!setProfileIdManual}" rerender="none" oncomplete="darkenJS(); return false;" >
                    <apex:param assignTo="{!profileId}" name="profileId" value="" />
                </apex:actionFunction>
                <apex:actionFunction name="setSelectedPaymentManual" action="{!setSelectedPaymentManual}" status="statusUpdating" rerender="hiddenInputs, refundMethods" onComplete="onCompleteChangeDefault(); darkenJS(); return false;" >
                    <apex:param assignTo="{!selectedPayment}" name="selectedPayment" value="" />
                </apex:actionFunction>

                <apex:actionFunction name="clearMessages" action="{!refundService.clearMessages}" status="statusUpdating" rerender="spinner" />

                <div class="slds-form" id="firstdiv">

                    <table style="width:70%">

                        <tr>
                            <td>
                                <div>
                                    <label class="">
                                        <input onchange = "uncheckOthers(); changeTotal(); return false;" type="checkbox" class="topCB" name="options" id="instCB" />
                                        <!-- Changes added by Artyom M. per B-15672 -->
                                        <script>
                                            checkTop();
                                            changeTotal();
                                        </script>
                                        <span class="slds-checkbox--faux"></span>
                                        <span class="">Amount :</span>
                                    </label>
                                </div>
                            </td>
                            <td>
                                <div class="slds-form-element">
                                    <div class="slds-form-element__control slds-input-has-fixed-addon">
                                        <span class="slds-form-element__addon">$</span>
                                        <input id="installment" class="slds-input" type="text" value="{!amountDue}" disabled="disabled" />
                                    </div>
                                </div>
                            </td>

                        </tr>

                        <tr style="{!IF(isRefundStoreCreditToCard, 'display:none', '')}">
                            <td style="{!IF(otherAmntList.size==0,'', 'display:none')}">
                                <label id="otherAmntLabel" class="" for="textareaSample2"><apex:outputLink value="" onclick="getSelectOptionsSer(); return false;">Add other amount</apex:outputLink></label>
                            </td>
                        </tr>
                        <tr>
                            <td>

                                <br/>
                            </td>
                        </tr>

                        <apex:repeat value="{!otherAmntMap}" var="otherAmntIndx" >
                            <tr class="trOther" id="tr{!otherAmntIndx + 2}">
                                <td>
                                    <div>
                                        <label class="">
                                            <input id="cb{!otherAmntIndx + 2}" class="otherCB" onchange = "uncheckTop(); changeTotal(); return false;" type="checkbox" name="options" />
                                            <!-- Changes added by Artyom M. per B-15672 -->
                                            <script>
                                                checkOthers();
                                                uncheckTop();
                                                changeTotal();
                                            </script>
                                            <span class="slds-checkbox--faux"/>
                                            <span class="">Other Amount :</span>
                                        </label>
                                    </div>
                                </td>
                                <td>
                                    <div class="slds-form-element">
                                        <div class="slds-form-element__control slds-input-has-fixed-addon">
                                            <span class="slds-form-element__addon">$</span>
                                            <input id="in{!otherAmntIndx + 2}" oninput="changeTotal(); return false;" class="slds-input otherAmnt" type="text" placeholder="0.00" value="{!otherAmntMap[otherAmntIndx].amount}" />

                                        </div>
                                    </div>
                                </td>
                            </tr>

                            <tr height="20px" >
                                <td colspan="4" style="line-height:0">

                                    <hr style="padding:0px; margin:0px;  display:none;" />
                                </td>

                            </tr>
                        </apex:repeat>

                        <tr height="20px">
                            <td colspan="5">

                                <hr style="padding:0px; margin:0px;" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div>
                                    <label class="">
                                        <span class="">Process Total :</span>
                                    </label>
                                </div>
                            </td>
                            <td colspan="2">
                                <div class="slds-form-element">
                                    <div class="slds-form-element__control slds-input-has-fixed-addon">
                                        <span class="slds-form-element__addon">$</span>
                                        <div class="slds-form-element__control">
                                            <span id="total" class="slds-form-element__static">0.00</span>
                                        </div>
                                    </div>

                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td>
                                <div>
                                    <label class="">
                                        <span class="">Amount Due :</span>
                                    </label>
                                </div>
                            </td>

                            <td colspan="2">
                                <div class="slds-form-element">
                                    <div class="slds-form-element__control slds-input-has-fixed-addon">
                                        <span class="slds-form-element__addon">$</span>
                                               <span class="slds-form-element__control">
                                                <span id="amount_due" class="slds-form-element__static">{!amountDue}</span>
                                              </span>
                                    </div>

                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <br/>
                            </td>

                        </tr>
                        <tr style="{!IF(isRefundStoreCreditToCard, 'display:none', '')}">
                            <td>
                                <div>
                                    <label class="">
                                        <span class="">Transaction for Refund :</span>
                                    </label>
                                </div>
                            </td>

                            <td>
                                <div class="slds-form-element">
                                        <div class="slds-select_container">
                                            <input type="hidden" value="{!selectedPayment}" id="theSelectedPayment"/>
                                            <apex:selectList id="transactionOptions" value="{!selectedPayment}" multiselect="false" size="1" styleClass="slds-select"
                                                onblur="document.getElementById('theSelectedPayment').value = this.value;"
                                                onchange="changeDefaultRefundMethod(this.options[this.selectedIndex].value); return false;">
                                                <apex:actionSupport event="onchange" reRender="hiddenInputs"/>
                                                <apex:selectOptions value="{!pastPaymentOptions}" />
                                            </apex:selectList>
                                        </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <br/>
                            </td>

                        </tr>

                        <tr style="{!IF(isRefundStoreCreditToCard, 'display:none', '')}">
                            <td>
                                <div>
                                    <label class="">
                                        <span class="">Refund Method :</span>
                                    </label>
                                </div>
                            </td>
                            <td>
                                <div class="slds-form-element">
                                    <c:IADPaymentProfilesDropdown id="refundMethods" theuserid="{!customerId}" theOrderId="{!orderNum}"  theinvokingpagetype="MakeRefund" />
                                </div>

                            </td>
                        </tr>
                        <tr>
                            <td>
                                <br/>
                            </td>

                        </tr>
                        <tr>

                            <td>
                                <div>
                                    <label class="">
                                        <span class="">Reason for Refund :</span>
                                    </label>
                                </div>
                            </td>
                            <td>
                                <div class="slds-form-element">
                                    <div class="slds-form-element__control">
                                        <div class="slds-select_container">
                                            <apex:selectlist value="{!selectedReasonForRefunds}" multiselect="false" size="1" styleclass="slds-select" label="Refund Reason" id="selectoption">
                                                <apex:selectoptions value="{!reasonForRefunds}" id="options" />
                                            </apex:selectlist>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <br/>
                            </td>

                        </tr>

                        <tr>
                            <td>
                                <span class="">Comments :</span>
                            </td>
                            <td>
                                <div class="slds-form-element">
                                    <apex:inputTextarea value="{!comments}" styleClass="slds-textarea" />
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <br/>
                            </td>

                        </tr>
                        <tr>
                            <td>
                                <span class="">Notification Email :</span>
                            </td>
                            <td>
                                <div class="slds-form-element">
                                    <apex:input type="email" styleClass="slds-input" value="{!email}" />
                                    <!--<input class="slds-input" value="{!email}"/>-->
                                </div>
                            </td>
                        </tr>

                    </table>

                    <apex:outputpanel id="spinner">
                        <apex:actionstatus id="statusUpdating">
                            <apex:facet name="start">
                                <div class="slds-spinner_container">
                                    <div class="slds-spinner slds-spinner--small" aria-hidden="false" role="alert">
                                        <div class="slds-spinner__dot-a"></div>
                                        <div class="slds-spinner__dot-b"></div>
                                    </div>
                                </div>
                            </apex:facet>
                        </apex:actionstatus>

                        <c:IADMessageBox themessages="{!refundService.iadMessages}" />
                    </apex:outputpanel>
                    <div class="slds-float--left">
                        <button class="slds-button slds-button--neutral" onclick="closeCurrentTab();">Cancel</button>
                        <button id="process" onclick="postRefund(); return false;" class="slds-button slds-button--brand">Process</button>
                    </div>
                </div>
            </apex:form>
        </div>

    </div>


    </body>

    </html>
</apex:page>